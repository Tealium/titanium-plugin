/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.tealium.titaniumandroid;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import com.tealium.library.Tealium;
import com.tealium.lifecycle.LifeCycle;
import android.webkit.WebView;


@Kroll.module(name="TealiumTitaniumAndroid", id="com.tealium.titaniumandroid")
public class TealiumTitaniumAndroidModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "TealiumTitaniumAndroidModule";
	private static final boolean DBG = TiConfig.LOGD;
	private static TiApplication thisApp = null;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TealiumTitaniumAndroidModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
		thisApp = app;
		WebView.setWebContentsDebuggingEnabled(true);
	}

	@Kroll.method
	public void initTealium(String instanceName, String account, String profile, String env, String dataSourceId,
													String collectDispatchURL, String collectDispatchProfile, boolean isLifecycleEnabled){
		if (thisApp == null) {
			return;
		}
		Tealium.Config config = Tealium.Config.create(thisApp, account, profile, env);

		// full URL takes precedence over just the profile.
		if (collectDispatchURL != null){
				config.setOverrideCollectDispatchUrl(collectDispatchURL);
		} else if (collectDispatchProfile != null) {
				config.setOverrideCollectDispatchUrl("https://collect.tealiumiq.com/vdata/i.gif?tealium_account=" + account + "&tealium_profile=" + collectDispatchProfile);
		}

		if (isLifecycleEnabled == true) {
			LifeCycle.setupInstance(instanceName, config, isLifecycleEnabled);
		}

		if (dataSourceId != null) {
        config.setDatasourceId(dataSourceId);
    }

		config.setForceOverrideLogLevel("dev");

		Tealium t = Tealium.createInstance(instanceName, config);
	}

	// trackEvent

	// trackView

  // trackLifecycle

	// setPersistent

	// setVolatile

	// getVolatile

	// getPersistent

	// addRemoteCommand

	// Methods
	@Kroll.method
	public String example()
	{
		Log.d(LCAT, "example called");
		return "hello world";
	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp()
	{
		Log.d(LCAT, "get example property");
		return "hello world";
	}


	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}

}
